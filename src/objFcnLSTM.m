function [objFcn] = objFcnLSTM(p, t, pv, tv)
    objFcn = @valErrorFcn;
    function [valError, cons, fileName] = valErrorFcn(optVars)
        layers = [
               sequenceInputLayer(ESPConst.N_INPUT_FEATURES)
               lstmLayer(512, OutputMode="last")
               fullyConnectedLayer(ESPConst.N_OUTPUT_CLASSES_ALL)
               softmaxLayer
               classificationLayer
                 ];
        miniBatchSize = 50;
        validationFrequency = 300;
        options = trainingOptions('adam', ...
            'InitialLearnRate', optVars.InitialLearnRate, ...
            'MaxEpochs', 10, ... 
            'LearnRateSchedule', 'piecewise', ...
            'MiniBatchSize', miniBatchSize, ...
            'L2Regularization', optVars.L2Regularization, ...
            'ExecutionEnvironment', "cpu", ...
            'Verbose', true, ...
            'Plots', 'training-progress', ...
            'ValidationData', {pv, tv}, ...
            'ValidationFrequency', validationFrequency);

        tNN = trainNetwork(p, t, layers, options);
        predicted = classify(tNN, pv);
        valError = immse(predicted, tv);
        fileName = num2str(valError) + "LSTM" + ".mat";
        save(fileName, 'tNN','valError','options')
        cons = [];
    end
end